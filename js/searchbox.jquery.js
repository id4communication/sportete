(function($){		/**	 * Plugin de la boite de recherche avancée du site Sport'Été	 * 	 * @author : Artscore Studio (info@artscore-studio.fr)	 * @version : 0.1	 */	$.fn.searchbox = function(options)	{		/**		 * Options par défaut		 */		var defaults = {			selected_univers: [],			selected_activities: [],			selected_destinations: [],			selected_ages: [],			selected_periods: [],			selected_codes: [],			selected_standalone_code: [],			sorts: 'sejour.name.asc'		}				// Options de l'instance du plugin en cours		var opts = {};				/**		 * Initialisation du plugin		 */		var init = function(options)		{			// Fusion des options par défaut avec les options données au plugin			opts = $.extend(defaults, options);						// Initialisation des clics sur les liens			methods.initClickEventOnLinks();						// Initialisation des événements de suppression de critère			$('#recherche_details').find('a.selected').each(function(){				var $anchor = $(this);				methods.attachDeleteEventOnSelectedCriteria($anchor);			});						// Vérification qu'il y a des mots-clés en session au chargement d'une page			methods.initSessionKeywords();					    // Trier les résultats de recherche par prix			methods.initSortButton();						// Initialisation de la recherche par code séjour dans le formulaire de recherche avancée			methods.initSubmitCodeSejour();						// Initialisation du formulaire de recherche rapide			methods.initQuickSearchForm();		}				/**		 * Liste des méthodes du plugin		 */		var methods = {							/**			 * METHODES POUR LE FORMULAIRE DE RECHERCHE RAPIDE			 * ======================================================== 			 */						/**			 * Initialisation du formulaire de recherche rapide			 */			initQuickSearchForm: function()			{				// On vide les input (sous firefox il garde les anciennes données)				$('#quick-search-form').find('input[type=hidden]').each(function(){					$(this).val('');				});								// Initialisation des listes de sélection de critères				methods.initClickOnQuickSearchLists();								$('#quick-search-form').submit(function(e){					e.preventDefault();					// Récupération des valeurs pour les listes					$(this).find('input[type=hidden]').each(function(){						var family_criteria = $(this).parent().find('ul').attr('id');						var value = $(this).val();						if (family_criteria == 'activities_criterias' && opts.selected_activities.length == 0 && value != '') {							methods.addCriteria($(this).val(), family_criteria);						} else if (family_criteria == 'ages_criterias' && opts.selected_ages.length == 0 && value != '') {							methods.addCriteria($(this).val(), family_criteria);						} else if (family_criteria == 'periods_criterias' && opts.selected_periods.length == 0 && value != '') {							methods.addCriteria($(this).val(), family_criteria);						}					});					// Récupération de la valeur de l'input text du code de séjour					if ($(this).find('#code_sejour').val() != '') {						opts.selected_codes = [];						methods.addCriteria($(this).find('#code_sejour').val(), 'codes_criterias');					}					methods.refreshResult();				});			},						/**			 * Initialisation des listes de sélection de critères dans le moteur de recherche avancée			 */			initClickOnQuickSearchLists: function()			{				$('#quick-search-form').find('a.item_list').click(function(e){					e.preventDefault();										// Initialisation des variables					var anchor_parent = $(this).parent().parent().parent().find('.dropdown-toggle .label_list');					var keyword = $(this).attr('data-keywords');					var family_criteria = $(this).parent().parent().attr('id');										// On vide les tableaux de critères sélectionnés qui ne sont pas pris en compte dans la recherche rapide					opts.selected_destinations = [];					opts.selected_univers = [];					opts.selected_standalone_code = [];										// Remise à zéro des éléments					$('#quick-search-form').find('a.item_list').each(function(){						$(this).parent().removeClass('active');					});										// On vide le tableau de critères sélectionnés car c'est un "select one"					if (family_criteria == 'activities_criterias') {						opts.selected_activities = [];					} else if (family_criteria == 'ages_criterias') {						opts.selected_ages = [];					} else if (family_criteria == 'periods_criterias') {						opts.selected_periods = [];					}										// Modification des élements avec les nouvelles valeurs					$(this).parent().addClass('active');					anchor_parent.html($(this).text());					$(this).parent().parent().parent().find('input').val(keyword);				});			},						/**			 * METHODES POUR LE FORMULAIRE DE RECHERCHES AVANCEES			 * ======================================================== 			 */						/**			 * Bouton de recherche par code dans le formuliare de recherche avancée			 */			initSubmitCodeSejour: function()			{				$('#submit_code_sejour').click(function(e){					e.preventDefault();					var searched_code = $('#code_sejour').val();										if (searched_code != '') {						opts.selected_standalone_code.push(searched_code);						methods.refreshResult();					}				})			},						/**			 * Complete le tableau javascript des filtres au chargement des pages			 * 			 */			initSessionKeywords: function()			{				$('#recherche_details').find('.hidden_criteria').each(function(){					var anchor = $(this).find('a');					var ul = $(this).parent();					var family_criteria = ul.attr('id');					methods.addCriteria(anchor, family_criteria);				});							},						/**			 * Initialisation du click sur les liens dans listes			 */			initClickEventOnLinks: function()			{				$('.rechercheavanceecorpsdetails').each(function(){					$(this).find('a').each(function(){						methods.attachEventClickAddCriteria(this);					});				});			},						/**			 * Evenement onClick pour l'ajout d'un critère de recherche			 * 			 * @param <object> element : DOM Element sur lequel on rattache l'événement onClick 			 */			attachEventClickAddCriteria: function(element)			{				var list = $(element).parent().parent();				var family_criteria = $(list).attr('id');								$(element).click(function(event){					event.preventDefault();					var clone = $(this).clone();										if (true === methods.addCriteria($(this), family_criteria)) {						$(this).parent().fadeOut('slow', function(){							$(this).addClass('hidden_criteria');							methods.addCriteriaToFamilyCriteriaSelectedList(family_criteria, clone);							methods.refreshResult();						});					}				});			},						/**			 * Attache l'évènement pour enlever un critère de recherche			 * 			 * @param <object> element : DOM Element sur lequel on rattache l'événement onClick			 */			attachDeleteEventOnSelectedCriteria: function (element)			{				$(element).click(methods.deleteSelectedCriteria);			},						/**			 * Ajout du critère de recherche dans la zone de critères sélectionnés			 * 			 * @param <string> family_criteria Catégorie de critère			 * @param <object> element DOM Element à copier/coller			 */			addCriteriaToFamilyCriteriaSelectedList: function(family_criteria, element)			{				var $list = $('#' + family_criteria);				var $header = $('#' + family_criteria + '_heading');				var $dropzone = $header.find('#selection');								if ($dropzone.length == 0) {					$dropzone = $('<div id="selection"></div>');					$header.append($dropzone);				}								var $anchor = $('<a class="selected" style="display:none" data-id="' + $(element).attr('data-id') + '"></a>');				var $delete_img = $('<img src="/bundles/sportetewebsite/images/rechercheavancee_deselect.png" width="16" height="16" class="deselect">');								methods.attachDeleteEventOnSelectedCriteria($anchor);								$anchor.text(element.text());				$anchor.append($delete_img);				$dropzone.append($anchor);				$anchor.fadeIn('fast');			},						/**			 * Déselection d'un critère			 * 			 * @param event Evénement propagé par le clic			 */			deleteSelectedCriteria: function(event)			{				event.preventDefault();								var header = $(this).parent().parent();				var explode_string = $(header).attr('id').split('_');				var list_id = explode_string[0] + '_' + explode_string[1];				var $list = $('#' + list_id);				var id = $(this).attr('data-id');				var element_to_remove = this;								$list.find('.hidden_criteria').each(function(){					var anchor = $(this).find('a');					var li = this;										if ($(anchor).attr('data-id') == id) {						$(element_to_remove).hide('fast', function(){							if (true === methods.delCriteria(anchor, list_id)) {								$(this).remove();								$(li).show('slow');								methods.refreshResult();							}						});					}				});			},						/**			 * METHODES DE TRAITEMENT			 * ======================================================== 			 */						/**			 * Bouton pour réordonner l'affichage des résultats			 * 			 */			initSortButton: function()			{				$('#sorts-list').find('a').click(function(e){			    	e.preventDefault();			    	var sort_type = $(this).attr('data-id');			    	$('#sorts-list').find('li').each(function(){			    		$(this).removeClass('active');			    	});			    	$(this).parent().addClass('active');			    	opts.sorts = sort_type;					methods.refreshResult();			    });			},						/**			 * Ajout du critère de recherche dans le tableau des critères de recherche			 * 			 * @param <object> criteria DOM Element représentant le critère			 * @param <string> family_criteria Catégorie de critère			 */			addCriteria: function(criteria, family_criteria)			{				if (typeof criteria == 'string') {					var search_value = criteria;				} else {					var search_value = $(criteria).attr('data-keywords');				}				if(family_criteria == 'univers_criterias') {					opts.selected_univers.push(search_value);				} else if(family_criteria == 'activities_criterias') {					opts.selected_activities.push(search_value);				} else if(family_criteria == 'destinations_criterias') {					opts.selected_destinations.push(search_value);				} else if(family_criteria == 'ages_criterias') {					opts.selected_ages.push(search_value);				} else if (family_criteria == 'periods_criterias') {					opts.selected_periods.push(search_value);				} else if (family_criteria == 'codes_criterias') {					opts.selected_codes.push(search_value);				}				return true;			},			/**			 * Supprime un critère de recherche dans le tableau des critères de recherche			 * 			 * @param <object> criteria DOM Element représentant le critère			 * @param <string> family_criteria Catégorie de critère			 */			delCriteria: function(criteria, family_criteria)			{				var search_value = $(criteria).attr('data-keywords');				var key = null;				var new_array = [];								if(family_criteria == 'univers_criterias') {					$(opts.selected_univers).each(function(item, value){						if (value != search_value) {							new_array.push(value);						}					});					opts.selected_univers = new_array;				} else if(family_criteria == 'activities_criterias') {					$(opts.selected_activities).each(function(item, value){						if (value != search_value) {							new_array.push(value);						}					});					opts.selected_activities = new_array;				} else if(family_criteria == 'destinations_criterias') {					$(opts.selected_destinations).each(function(item, value){						if (value != search_value) {							new_array.push(value);						}					});					opts.selected_destinations = new_array;				} else if(family_criteria == 'age_criterias') {					$(opts.selected_ages).each(function(item, value){						if (value != search_value) {							new_array.push(value);						}					});					opts.selected_ages = new_array;				}				return true;			},						/**			 * Lance la recherche			 * 			 */			refreshResult: function()			{				if ($('#recherche_avancee').attr('data-url-univers') == '') {					var url = '/sejours-stages';				} else {					var url = '/' + $('#quick_search').attr('data-url-univers') + '/sejours-stages';				}				// Récupération de l'univers sélectionné				var first = true;				var is_params = false;				$(opts.selected_univers).each(function(item, value){					is_params = true;					if (first == true) {						url += '/' + value;					} else {						url += '-ou-' + value;					}					first = false;				});								// Récupération des activities sélectionnées				var first = true;				$(opts.selected_activities).each(function(item, value){					is_params = true;					if (first == true) {						url += '/' + value;					} else {						url += '-ou-' + value;					}					first = false;				});								// Récupération des destinations sélectionnées				var first = true;				$(opts.selected_destinations).each(function(item, value){					is_params = true;					if (first == true) {						url += '/' + value;					} else {						url += '-ou-' + value;					}					first = false;				});								// Récupération des ages sélectionnés				var first = true;				$(opts.selected_ages).each(function(item, value){					is_params = true;					if (first == true) {						url += '/' + value;					} else {						url += '-ou-' + value;					}					first = false;				});								// Récupération des ages sélectionnés				var first = true;				$(opts.selected_periods).each(function(item, value){					is_params = true;					if (first == true) {						url += '/' + value;					} else {						url += '-ou-' + value;					}					first = false;				});								// Récupération des codes de séjours				var first = true;				$(opts.selected_codes).each(function(item, value){					is_params = true;					if (first == true) {						url += '/' + value;					} else {						url += '-ou-' + value;					}					first = false;				});								// Si il y a une recherche de code pour le moteur de recherche avancée, on ne prend en compte que celui là				if (opts.selected_standalone_code.length > 0) {					if ($('#recherche_avancee').attr('data-url-univers') == '') {						var url = '/sejours-stages';					} else {						var url = '/' + $('#recherche_avancee').attr('data-url-univers') + '/sejours-stages';					}					var first = true;					$(opts.selected_standalone_code).each(function(item, value){						is_params = true;						if (first == true) {							url += '/' + value;						} else {							url += '-ou-' + value;						}						first = false;					});				}								if (is_params == false) {					url += '';				}				if (opts.sorts != '') {					var sorts = 'sorts='+opts.sorts;				}								$.post(url, sorts, function(data){					$('#page').html(data);					methods.initSortButton();				});			}		}				init(options);		return false;	}	})(jQuery);